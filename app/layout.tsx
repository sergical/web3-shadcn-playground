import type { Metadata } from "next";
import { Inter as FontSans } from "next/font/google";
import "./globals.css";

import {
  DynamicContextProvider,
  DynamicWagmiConnector,
  EthereumWalletConnectors,
} from "@/lib/dynamic";
import { headers } from "next/headers";
import { cookieToInitialState } from "wagmi";

import { ModeToggle } from "@/components/mode-toggle";
import { cn } from "@/lib/utils";
import { config } from "@/lib/wagmi";
import { Providers } from "./providers";
import { ThemeProvider } from "./theme-provider";

const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const initialState = cookieToInitialState(config, headers().get("cookie"));
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={cn(
          "min-h-screen bg-background font-sans antialiased",
          fontSans.variable
        )}
      >
        <DynamicContextProvider
          settings={{
            environmentId: process.env.DYNAMIC_ENVIRONMENT_ID || "",
            walletConnectors: [EthereumWalletConnectors],
          }}
        >
          <Providers initialState={initialState}>
            <DynamicWagmiConnector>
              <ThemeProvider
                attribute="class"
                defaultTheme="system"
                enableSystem
                disableTransitionOnChange
              >
                <ModeToggle />
                {children}
              </ThemeProvider>
            </DynamicWagmiConnector>
          </Providers>
        </DynamicContextProvider>
      </body>
    </html>
  );
}
